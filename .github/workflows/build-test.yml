name: Build and test

on:
  push:
    branches-ignore:
      - "dependabot/**"
  pull_request:

env:
  RUST_CHANNEL: "stable"
  RUST_TEST_CHANNEL: "nightly"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: moonrepo/setup-rust@v1
        with:
          cache-target: release
          channel: ${{ env.RUST_TEST_CHANNEL }}
      - name: Build shackle-cli
        run: cargo install --root dist/ --path crates/shackle-cli
      - name: Build shackle-ls
        run: cargo install --root dist/ --path crates/shackle-ls
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: shackle-exe-${{ matrix.os }}
          path: dist/
  test-coverage:
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: moonrepo/setup-rust@v1
        with:
          cache: false
          channel: ${{ env.RUST_TEST_CHANNEL }}
      - name: cargo install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Checkout MiniZinc repo
        uses: actions/checkout@v4
        with:
          repository: MiniZinc/libminizinc
          path: minizinc
          ref: develop
      - name: Generate code coverage
        run: cargo llvm-cov --all-features --workspace --codecov --output-path codecov.json
        env:
          MZN_STDLIB_DIR: ${{ github.workspace }}/minizinc/share/minizinc
      - uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: codecov.json
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest] # TODO: Add windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: moonrepo/setup-rust@v1
        with:
          channel: ${{ env.RUST_TEST_CHANNEL }}
      - name: Checkout MiniZinc repo
        uses: actions/checkout@v4
        with:
          repository: MiniZinc/libminizinc
          path: minizinc
          ref: develop
      - name: Run cargo test
        run: cargo test
        env:
          MZN_STDLIB_DIR: ${{ github.workspace }}/minizinc/share/minizinc

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain and clippy
        uses: moonrepo/setup-rust@v1
        with:
          channel: ${{ env.RUST_CHANNEL }}
          components: clippy
      - name: Checkout MiniZinc repo
        uses: actions/checkout@v4
        with:
          repository: MiniZinc/libminizinc
          path: minizinc
          ref: develop
      - name: Run clippy
        run: cargo clippy --tests -- -D warnings
        env:
          MZN_STDLIB_DIR: ${{ github.workspace }}/minizinc/share/minizinc
